contract Example =

  entrypoint hash(url : string) =
    Crypto.blake2b(url)

  entrypoint test_verify(url : string, pubkey : address, sig : signature) =
    let msg = hash(url)
    Crypto.verify_sig(msg, pubkey, sig)

  entrypoint test_verify_personal_message(msg : hash, pubkey : address, sig : signature) =
    Crypto.verify_sig(msg, pubkey, sig)

  entrypoint prefix_message(msg : string) =
    let prefix = "aeternity Signed Message:\n"
    String.concat(Int.to_str(String.length(prefix)), String.concat(prefix, String.concat(Int.to_str(String.length(msg)), msg)))

  entrypoint test_verify_prefix(msg : string, pubkey : address, sig : signature) =
    let hash = hash(prefix_message(msg))
    Crypto.verify_sig(hash, pubkey, sig)

  entrypoint prefix_message_hashed(msg : string) : bytes(60) =
    let hash = Crypto.blake2b(msg)
    let prefixBytes : bytes(28) = #1a61657465726e697479205369676e6564204d6573736167653a0a20
    Bytes.concat(prefixBytes, hash)

  entrypoint test_verify_prefix_hashed(msg : string, pubkey : address, sig : signature) =
    let hash = Crypto.blake2b(prefix_message_hashed(msg))
    Crypto.verify_sig(hash, pubkey, sig)
